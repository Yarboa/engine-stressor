#!/bin/bash
# Licensed under the Apache License, Version 2.0 (the "License");
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Function to check if a package is installed
is_installed() {
    rpm -q "$1" &> /dev/null
    return $?
}

# Define a constant for the number of iterations
NUM_ITERATIONS=${NUM_ITERATIONS:-1} # Default to 1 if not set

stress_memory() {
    # Make sure we are in a temp writable dir (/var/tmp)
    pushd /var/tmp || exit

    # Source profile (optional, depending on need)
    source /etc/profile

    # Calculate % of total memory
    mem_to_stress=$(free -m | awk -v threshold=$MEMORY_EXHAUSTION_BASE_CONTAINER_THRESHOLD_PERCENT '/Mem:/ {print int($2 * threshold / 100)}')
    echo "Memory to stress: $mem_to_stress MB (before multiplication)"
    mem_to_stress=$(( mem_to_stress * 2 ))
    echo "Memory to stress: $mem_to_stress MB (after multiplication)"


    # Loop to execute the stress-ng command NUM_ITERATIONS times
    for ((i = 1; i <= NUM_ITERATIONS; i++)); do
        echo "Iteration $i of $NUM_ITERATIONS"

        # Run stress-ng to stress the percentage defined of total memory
        STRESS_NG_CMD="stress-ng \
            --vm $MEMORY_EXHAUSTION_BASE_CONTAINER_STRESS_NG_VM \
            --vm-bytes ${mem_to_stress}M \
            --vm-method $MEMORY_EXHAUSTION_BASE_CONTAINER_STRESS_NG_VM_METHOD \
            --timeout $MEMORY_EXHAUSTION_BASE_CONTAINER_STRESS_NG_TIMEOUT"

        echo "======== DEBUG: Executing =============="
        echo "$STRESS_NG_CMD"
        echo "======== DEBUG: Executing =============="

        eval "$STRESS_NG_CMD"
    done

    popd || exit
}

# Ensure required environment variables are set
: "${MEMORY_EXHAUSTION_BASE_CONTAINER_THRESHOLD_PERCENT:?Environment variable not set or empty}"
: "${MEMORY_EXHAUSTION_BASE_CONTAINER_STRESS_NG_VM:?Environment variable not set or empty}"
: "${MEMORY_EXHAUSTION_BASE_CONTAINER_STRESS_NG_VM_METHOD:?Environment variable not set or empty}"
: "${MEMORY_EXHAUSTION_BASE_CONTAINER_STRESS_NG_TIMEOUT:?Environment variable not set or empty}"

echo "Memory Threshold is set to $MEMORY_EXHAUSTION_BASE_CONTAINER_THRESHOLD_PERCENT%..."

echo "Starting the stress process..."
# Stress memory
stress_memory

# Keep the script running
wait
